---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: managedresources.espejote.io
spec:
  group: espejote.io
  names:
    kind: ManagedResource
    listKind: ManagedResourceList
    plural: managedresources
    singular: managedresource
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.status
      name: Status
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ManagedResource is the Schema for the ManagedResources API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ManagedResourceSpec defines the desired state of ManagedResource
            properties:
              applyOptions:
                description: ApplyOptions defines the options for applying the ManagedResource
                properties:
                  fieldManager:
                    description: |-
                      FieldManager is the field manager to use when applying the ManagedResource
                      If not set, the field manager is set to the name of the resource with `managed-resource` prefix
                    type: string
                  fieldValidation:
                    default: Strict
                    description: |-
                      fieldValidation instructs the managed resource on how to handle
                      objects containing unknown or duplicate fields. Valid values are:
                      - Ignore: This will ignore any unknown fields that are silently
                      dropped from the object, and will ignore all but the last duplicate
                      field that the decoder encounters.
                      Note that Jsonnet won't allow you to add duplicate fields to an object
                      and most unregistered fields will error out in the server-side apply
                      request, even with this option set.
                      - Strict: This will fail the request with a BadRequest error if
                      any unknown fields would be dropped from the object, or if any
                      duplicate fields are present. The error returned will contain
                      all unknown and duplicate fields encountered.
                      Defaults to "Strict".
                    enum:
                    - Ignore
                    - Strict
                    type: string
                  force:
                    default: false
                    description: |-
                      Force is going to "force" Apply requests. It means user will
                      re-acquire conflicting fields owned by other people.
                    type: boolean
                type: object
              context:
                description: Context defines the context for the ManagedResource
                items:
                  properties:
                    name:
                      description: Name is the name of the context definition. The
                        context can be referenced in the template by this name.
                      minLength: 1
                      type: string
                    resource:
                      description: |-
                        Resource defines the resource that should be added to the context.
                        Adds a list of zero or more resources to the context.
                      properties:
                        apiVersion:
                          description: |-
                            APIVersion of the resource that should be added to the context.
                            The APIVersion can be in the form "group/version" or "version".
                          type: string
                        ignoreNames:
                          description: |-
                            IgnoreNames can be used to filter the resources that should be added to the context.
                            This is considered experimental and might be removed in the future.
                            The filtering is done on the controller side and might not be as efficient as the LabelSelector.
                            Filtered objects are dropped before any caching or processing.
                          items:
                            type: string
                          type: array
                        kind:
                          description: Kind of the resource that should be added to
                            the context.
                          type: string
                        labelSelector:
                          description: |-
                            LabelSelector can be used to filter the resources that should be added to the context.
                            This is efficiently done by the Kubernetes API server
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        matchNames:
                          description: |-
                            MatchNames can be used to filter the resources that should be added to the context.
                            This is considered experimental and might be removed in the future.
                            The filtering is done on the controller side and might not be as efficient as the LabelSelector.
                            Filtered objects are dropped before any caching or processing.
                          items:
                            type: string
                          type: array
                        name:
                          description: |-
                            Name of the resource that should be added to the context.
                            If not set, all resources of the specified Kind are added to the context.
                          type: string
                        namespace:
                          description: |-
                            Namespace for the resources that should be added to the context.
                            If not set, the namespace of the ManagedResource is used.
                            Can be set to empty string to add all namespaces.
                          type: string
                        stripManagedFields:
                          description: |-
                            StripManagedFields removes the managedFields from the watched resource.
                            managedFields are not used in Espejote and if the template does not use them, they can be removed to significantly reduce the size of cached objects.
                            Defaults to true if not set.
                          type: boolean
                      type: object
                  required:
                  - name
                  type: object
                type: array
              serviceAccountRef:
                default:
                  name: default
                description: |-
                  ServiceAccountRef is the service account this managed resource runs as.
                  The service account must have the necessary permissions to manage the resources referenced in the template.
                  If not set, the namespace's default service account is used.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              template:
                description: |-
                  Template defines the template for the ManagedResource
                  The template is rendered using Jsonnet and the result is applied to the cluster.
                  The template can reference the context and trigger information.
                  All access to injected data should be done through the `espejote.libsonnet` import.
                  The template can reference JsonnetLibrary objects by importing them.
                  JsonnetLibrary objects have the following structure:
                  - "espejote.libsonnet": The built in library for accessing the context and trigger information.
                  - "lib/<NAME>/<KEY>" libraries in the shared library namespace. The name corresponds to the name of the JsonnetLibrary object and the key to the key in the data field.
                    The namespace is configured at controller startup and normally points to the namespace of the controller.
                  - "<NAME>/<KEY>" libraries in the same namespace as the ManagedResource. The name corresponds to the name of the JsonnetLibrary object and the key to the key in the data field.
                  The template can return a single object, a list of objects, or null. Everything else is considered an error.
                  Namespaced objects default to the namespace of the ManagedResource.
                type: string
              triggers:
                description: |-
                  Triggers define the resources that trigger the reconciliation of the ManagedResource
                  Trigger information will be injected when rendering the template.
                  This can be used to only partially render the template based on the trigger.
                items:
                  properties:
                    interval:
                      description: Interval defines the interval at which the ManagedResource
                        should be reconciled.
                      format: duration
                      type: string
                    name:
                      description: Name is the name of the trigger. The trigger can
                        be referenced in the template by this name.
                      minLength: 1
                      type: string
                    watchContextResource:
                      description: |-
                        WatchContextResource works the same as WatchResource, but it uses and already existing context resource.
                        This is useful when you require both full (when the template changes) and partial (a context resource changes) reconciliation of the same resource.
                        Check the example below. Both a context resource and a trigger are defined. If the trigger is not known in the template all network policies are reconciled.
                        If the trigger is known, only the network policies that match the trigger are reconciled. Using `watchContextResource` allows this without having to define the same resource again.

                          apiVersion: espejote.io/v1alpha1
                          kind: ManagedResource
                          metadata:
                            name: naemspace-default-netpol
                            annotations:
                              description: |
                                Injects a default network policy into every namespace not labeled `netpol.example.com/no-default`.
                          spec:
                            context:
                            - name: namespaces
                              resource:
                                apiVersion: v1
                                kind: Namespace
                                labelSelector:
                                  matchExpressions:
                                  - key: netpol.example.com/no-default
                                    operator: DoesNotExist
                            triggers:
                            - name: namespace
                              watchContextResource:
                                name: namespaces
                            template: |
                              local esp = import 'espejote.libsonnet';

                              local netpolForNs = function(ns) {
                                [...]
                              };

                              if esp.triggerName() == 'namespace' then [
                                netpolForNs(esp.triggerData().resource),
                              ] else [
                                netpolForNs(ns)
                                for ns in esp.context().namespaces
                              ]
                      properties:
                        name:
                          description: Name is the name of the context definition
                            used when creating this trigger.
                          type: string
                      type: object
                    watchResource:
                      description: |-
                        WatchResource defines one or multiple resources that trigger the reconciliation of the ManagedResource.
                        Resource information is injected when rendering the template and can be retrieved using `(import "espejote.libsonnet").getTrigger()`.
                        `local esp = import "espejote.libsonnet"; esp.triggerType() == esp.TriggerTypeWatchResource` will be true if the render was triggered by a definition in this block.
                      properties:
                        apiVersion:
                          description: |-
                            APIVersion of the resource that should be watched.
                            The APIVersion can be in the form "group/version" or "version".
                          type: string
                        ignoreNames:
                          description: |-
                            IgnoreNames can be used to filter the resources that should be watched.
                            This is considered experimental and might be removed in the future.
                            The filtering is done on the controller side and might not be as efficient as the LabelSelector.
                            Filtered objects are dropped before any caching or processing.
                          items:
                            type: string
                          type: array
                        kind:
                          description: Kind of the resource that should be watched.
                          type: string
                        labelSelector:
                          description: |-
                            LabelSelector can be used to filter the resources that should be watched.
                            This is efficiently done by the Kubernetes API server
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        matchNames:
                          description: |-
                            MatchNames can be used to filter the resources that should be watched.
                            This is considered experimental and might be removed in the future.
                            The filtering is done on the controller side and might not be as efficient as the LabelSelector.
                            Filtered objects are dropped before any caching or processing.
                          items:
                            type: string
                          type: array
                        name:
                          description: |-
                            Name of the resource that should be watched.
                            If not set, all resources of the specified Kind are watched.
                          type: string
                        namespace:
                          description: |-
                            Namespace for the resources that should be watched.
                            If not set, the namespace of the ManagedResource is used.
                            Can be explicitly set to empty string to watch all namespaces.
                          type: string
                        stripManagedFields:
                          description: |-
                            StripManagedFields removes the managedFields from the watched resource.
                            managedFields are not used in Espejote and if the template does not use them, they can be removed to significantly reduce the size of cached objects.
                            Defaults to true if not set.
                          type: boolean
                      type: object
                  required:
                  - name
                  type: object
                type: array
            type: object
          status:
            description: ManagedResourceStatus defines the observed state of ManagedResource
            properties:
              status:
                description: |-
                  Status reports the last overall status of the ManagedResource
                  More information can be found by inspecting the ManagedResource's events with either `kubectl describe` or `kubectl get events`.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
