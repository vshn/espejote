---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: managedresources.espejote.io
spec:
  group: espejote.io
  names:
    kind: ManagedResource
    listKind: ManagedResourceList
    plural: managedresources
    singular: managedresource
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ManagedResource is the Schema for the ManagedResources API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ManagedResourceSpec defines the desired state of ManagedResource
            properties:
              applyOptions:
                properties:
                  fieldManager:
                    description: |-
                      FieldManager is the field manager to use when applying the ManagedResource
                      If not set, the field manager is set to the name of the resource with `managed-resource` prefix
                    type: string
                  fieldValidation:
                    description: |-
                      fieldValidation instructs the managed resource on how to handle
                      objects containing unknown or duplicate fields. Valid values are:
                      - Ignore: This will ignore any unknown fields that are silently
                      dropped from the object, and will ignore all but the last duplicate
                      field that the decoder encounters.
                      - Strict: This will fail the request with a BadRequest error if
                      any unknown fields would be dropped from the object, or if any
                      duplicate fields are present. The error returned will contain
                      all unknown and duplicate fields encountered.
                      Defaults to "Strict".
                    enum:
                    - Ignore
                    - Strict
                    type: string
                  force:
                    description: |-
                      Force is going to "force" Apply requests. It means user will
                      re-acquire conflicting fields owned by other people.
                    type: boolean
                type: object
              context:
                description: Context defines the context for the ManagedResource
                items:
                  properties:
                    def:
                      description: Def is the name of the context definition. The
                        context can be referenced in the template by this name.
                      type: string
                    resource:
                      properties:
                        apiVersion:
                          description: APIVersion of the resource that should be added
                            to the context.
                          type: string
                        group:
                          description: Group of the resource that should be added
                            to the context.
                          type: string
                        ignoreNames:
                          description: |-
                            IgnoreNames can be used to filter the resources that should be added to the context.
                            This is considered experimental and might be removed in the future.
                            The filtering is done on the controller side and might not be as efficient as the LabelSelector.
                            Filtered objects are dropped before any caching or processing.
                          items:
                            type: string
                          type: array
                        kind:
                          description: Kind of the resource that should be added to
                            the context.
                          type: string
                        labelSelector:
                          description: |-
                            LabelSelector can be used to filter the resources that should be added to the context.
                            This is efficiently done by the Kubernetes API server
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        matchNames:
                          description: |-
                            MatchNames can be used to filter the resources that should be added to the context.
                            This is considered experimental and might be removed in the future.
                            The filtering is done on the controller side and might not be as efficient as the LabelSelector.
                            Filtered objects are dropped before any caching or processing.
                          items:
                            type: string
                          type: array
                        name:
                          description: |-
                            Name of the resource that should be added to the context.
                            If not set, all resources of the specified Kind are added to the context.
                          type: string
                        namespace:
                          description: |-
                            Namespace for the resources that should be added to the context.
                            If not set, the namespace of the ManagedResource is used.
                            Can be set to empty string to add all namespaces.
                          type: string
                      type: object
                  required:
                  - def
                  type: object
                type: array
              serviceAccountRef:
                description: |-
                  ServiceAccountRef is the service account to be used to run the controllers associated with this configuration
                  The default is the namespace's default service account
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              template:
                description: Template defines the template for the ManagedResource
                type: string
              triggers:
                description: Triggers define the resources that trigger the reconciliation
                  of the ManagedResource
                items:
                  properties:
                    watchResource:
                      description: WatchResource defines one or multiple resources
                        that trigger the reconciliation of the ManagedResource
                      properties:
                        apiVersion:
                          description: APIVersion of the resource that should be watched.
                          type: string
                        group:
                          description: Group of the resource that should be watched.
                          type: string
                        ignoreNames:
                          description: |-
                            IgnoreNames can be used to filter the resources that should be watched.
                            This is considered experimental and might be removed in the future.
                            The filtering is done on the controller side and might not be as efficient as the LabelSelector.
                            Filtered objects are dropped before any caching or processing.
                          items:
                            type: string
                          type: array
                        kind:
                          description: Kind of the resource that should be watched.
                          type: string
                        labelSelector:
                          description: |-
                            LabelSelector can be used to filter the resources that should be watched.
                            This is efficiently done by the Kubernetes API server
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        matchNames:
                          description: |-
                            MatchNames can be used to filter the resources that should be watched.
                            This is considered experimental and might be removed in the future.
                            The filtering is done on the controller side and might not be as efficient as the LabelSelector.
                            Filtered objects are dropped before any caching or processing.
                          items:
                            type: string
                          type: array
                        name:
                          description: |-
                            Name of the resource that should be watched.
                            If not set, all resources of the specified Kind are watched.
                          type: string
                        namespace:
                          description: |-
                            Namespace for the resources that should be watched.
                            If not set, the namespace of the ManagedResource is used.
                            Can be set to empty string to watch all namespaces.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
          status:
            description: ManagedResourceStatus defines the observed state of ManagedResource
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
