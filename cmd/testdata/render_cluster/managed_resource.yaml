apiVersion: espejote.io/v1alpha1
kind: ManagedResource
metadata:
  labels:
    app.kubernetes.io/name: espejote
    app.kubernetes.io/managed-by: kustomize
  name: managedresource-sample
spec:
  triggers:
  - name: configmap
    watchResource:
      apiVersion: v1
      kind: ConfigMap
      ignoreNames: [test-3]
      matchNames: [test-0,test-1,test-2,test-3,test-4,test-5,test-6,test-7,test-8,test-9]
      labelSelector:
        matchExpressions:
        - key: odd
          operator: Exists
  context:
  - name: configmaps
    resource:
      apiVersion: v1
      kind: ConfigMap
      ignoreNames: [test-3]
      matchNames: [test-0,test-1,test-2,test-3,test-4,test-5,test-6,test-7,test-8,test-9]
      labelSelector:
        matchExpressions:
        - key: odd
          operator: Exists
  template: |
    local esp = import "espejote.libsonnet";
    local samplelib = import "jsonnetlibrary-sample/sample.libsonnet";
    local configmaps = esp.context().configmaps;

    local cmNames = std.map(function(m) m.metadata.name ,configmaps);

    local stripMeta = function(obj) obj+{
      metadata: {
        name: obj.metadata.name,
        namespace: obj.metadata.namespace,
        labels: obj.metadata.labels,
      },
    };

    {
      trigger: esp.triggerName(),
      triggerInfo: if esp.triggerData() != null then stripMeta(esp.triggerData().resource),
      cmNames: cmNames,
    }
